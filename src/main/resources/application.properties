server.port=9443
app.cors.allowed-origins=*
rsa.public-key=classpath:certs/public.pem
rsa.private-key=classpath:certs/private.pem
#logging.level.com.ticketevent = ALL
logging.level.org.springframework.security=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter=DEBUG
# ===============================
# Date Format
# ===============================
spring.mvc.format.date=dd-MM-yyyy
spring.mvc.format.date-time==dd-MM-yyyy HH:mm:ss
spring.mvc.format.time=HH:mm:ss
# ===============================
# file management
# ===============================
## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=200KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB

## File Storage Properties
app.file-dir=photo



spring.h2.console.enabled=true

# ===============================
# DB - H2
# ===============================

#voir le fichier de config pour le reste de la config
#spring.datasource.url=jdbc:h2:mem:testdb
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.batch.jdbc.initialize-schema=always
spring.jpa.hibernate.ddl-auto=update
spring.jpa.defer-datasource-initialization= true
# ===============================
# DB -mysql
# ===============================
#spring.datasource.url=jdbc:mysql://localhost:3306/nouvelleProcedure?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
#spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
#spring.datasource.username=root
#spring.datasource.password=
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL8Dialect
#spring.jpa.properties.hibernate.dialect.storage_engine=innodb
# Initialize the datasource with available DDL and DML scripts
spring.sql.init.mode=always
spring.jpa.show-sql=true
spring.sql.init.encoding=UTF-8
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.defer-datasource-initialization= true
# Only repositories annotated with @(Repository)RestResource are exposed, unless their exported flag is set to false.
spring.data.rest.detection-strategy=annotated
#spring.batch.jdbc.initialize-schema=never
# ===============================
# Security - Oauth
# ===============================
spring.security.oauth2.client.registration.google.clientId=
spring.security.oauth2.client.registration.google.clientSecret=
spring.security.oauth2.client.registration.google.scope= email,profile,openid,address, phone

spring.security.oauth2.client.registration.facebook.clientId=
spring.security.oauth2.client.registration.facebook.client-secret=
spring.security.oauth2.client.registration.facebook.scope=email,public_profile
app.oauth2.authorizedRedirectUris=http://localhost:9443/oauth2/redirect,myandroidapp://oauth2/redirect,myiosapp://oauth2/redirect

# ===============================
# Security web - Https / ssl 
# =============================== 
spring.mvc.pathmatch.matching-strategy=ant-path-matcher
# pour la connexion avec la base :
spring.datasource.hikari.data-source-properties.useUnicode=true
spring.datasource.hikari.data-source-properties.characterEncoding=UTF-8


# Pour les requÃªtes http
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.enabled=true