package com.dogognon.sohliou.kone.NouvelleProcedure;

import com.dogognon.sohliou.kone.NouvelleProcedure.controller.MetierController__BeanDefinitions;
import com.dogognon.sohliou.kone.NouvelleProcedure.controller.SecuredMetierController__BeanDefinitions;
import com.dogognon.sohliou.kone.NouvelleProcedure.data.DepartementRepository__BeanDefinitions;
import com.dogognon.sohliou.kone.NouvelleProcedure.data.PosteRepository__BeanDefinitions;
import com.dogognon.sohliou.kone.NouvelleProcedure.data.ProcedureRepository__BeanDefinitions;
import com.dogognon.sohliou.kone.NouvelleProcedure.data.ServiceRepository__BeanDefinitions;
import com.dogognon.sohliou.kone.NouvelleProcedure.service.CrudMetierServiceImpl__BeanDefinitions;
import com.dogognon.sohliou.kone.NouvelleProcedure.service.SpecificMetierServiceImpl__BeanDefinitions;
import com.dogognon.sohliou.kone.file.FileStorageServiceImpl__BeanDefinitions;
import com.dogognon.sohliou.kone.file.controller.FileController__BeanDefinitions;
import com.dogognon.sohliou.kone.file.data.FileRepository__BeanDefinitions;
import com.dogognon.sohliou.kone.security.SecurityServiceImp__BeanDefinitions;
import com.dogognon.sohliou.kone.security.config.RsakeysConfig__BeanDefinitions;
import com.dogognon.sohliou.kone.security.config.SecurityConfig__BeanDefinitions;
import com.dogognon.sohliou.kone.security.config.WebConfig__BeanDefinitions;
import com.dogognon.sohliou.kone.security.controller.LoginController__BeanDefinitions;
import com.dogognon.sohliou.kone.security.data.RoleRepository__BeanDefinitions;
import com.dogognon.sohliou.kone.security.data.UserRepository__BeanDefinitions;
import com.dogognon.sohliou.kone.security.exception.handler.GlobalExceptionHandler__BeanDefinitions;
import com.dogognon.sohliou.kone.security.oauth2login.CustomOAuth2UserService__BeanDefinitions;
import com.dogognon.sohliou.kone.security.oauth2login.HttpCookieOAuth2AuthorizationRequestRepository__BeanDefinitions;
import com.dogognon.sohliou.kone.security.oauth2login.OAuth2AuthenticationFailureHandler__BeanDefinitions;
import com.dogognon.sohliou.kone.security.oauth2login.OAuth2AuthenticationSuccessHandler__BeanDefinitions;
import com.dogognon.sohliou.kone.security.oauth2login.util.AppProperties__BeanDefinitions;
import com.dogognon.sohliou.kone.security.oauth2ressourceserver.CustomAuthenticationEntryPoint__BeanDefinitions;
import com.dogognon.sohliou.kone.security.oauth2ressourceserver.CustomUserDetailsService__BeanDefinitions;
import com.dogognon.sohliou.kone.security.oauth2ressourceserver.TokenProvider__BeanDefinitions;
import org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator__BeanDefinitions;
import org.springframework.aot.generate.Generated;
import org.springframework.beans.factory.aspectj.AnnotationBeanConfigurerAspect__BeanDefinitions;
import org.springframework.beans.factory.support.DefaultListableBeanFactory;
import org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.endpoint.jackson.JacksonEndpointAutoConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.endpoint.web.servlet.WebMvcEndpointManagementContextConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.health.HealthEndpointAutoConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthContributorAutoConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthIndicatorProperties__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryAutoConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.metrics.JvmMetricsAutoConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.metrics.SystemMetricsAutoConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.metrics.data.RepositoryMetricsAutoConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleMetricsExportAutoConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.metrics.startup.StartupTimeMetricsListenerAutoConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.metrics.task.TaskExecutorMetricsAutoConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.metrics.web.tomcat.TomcatMetricsAutoConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.observation.web.client.HttpClientObservationsAutoConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.observation.web.client.RestClientObservationConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.observation.web.client.RestTemplateObservationConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.observation.web.servlet.WebMvcObservationAutoConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.scheduling.ScheduledTasksObservabilityAutoConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.security.servlet.SecurityRequestMatchersManagementContextConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthContributorAutoConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties__BeanDefinitions;
import org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementContextAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.AutoConfigurationPackages__BeanDefinitions;
import org.springframework.boot.autoconfigure.aop.AopAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.context.LifecycleProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.domain.EntityScanPackages__BeanDefinitions;
import org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.h2.H2ConsoleProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.info.ProjectInfoProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.jackson.JacksonProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.jdbc.DataSourceProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.jdbc.JdbcClientAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.jdbc.JdbcProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.orm.jpa.JpaProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.security.SecurityProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.security.oauth2.client.OAuth2ClientProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientRegistrationRepositoryConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2WebSecurityConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerOpaqueTokenConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.Oauth2ResourceServerConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.ssl.SslProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.task.TaskExecutionProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations__BeanDefinitions;
import org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations__BeanDefinitions;
import org.springframework.boot.autoconfigure.task.TaskSchedulingProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizationAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.transaction.TransactionProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.web.ServerProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.web.WebProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.web.client.RestClientAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.web.servlet.MultipartProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration__BeanDefinitions;
import org.springframework.boot.context.properties.BoundConfigurationProperties__BeanDefinitions;
import org.springframework.boot.context.properties.ConfigurationPropertiesBinder__BeanDefinitions;
import org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor__BeanDefinitions;
import org.springframework.boot.jackson.JsonMixinModuleEntries__BeanDefinitions;
import org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer__BeanDefinitions;
import org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter__BeanDefinitions;
import org.springframework.boot.web.server.ErrorPageRegistrarBeanPostProcessor__BeanDefinitions;
import org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessor__BeanDefinitions;
import org.springframework.context.event.DefaultEventListenerFactory__BeanDefinitions;
import org.springframework.context.event.EventListenerMethodProcessor__BeanDefinitions;
import org.springframework.data.auditing.AuditingHandler__BeanDefinitions;
import org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor__BeanDefinitions;
import org.springframework.data.jpa.domain.support.AuditingEntityListener__BeanDefinitions;
import org.springframework.data.jpa.mapping.JpaMetamodelMappingContext__BeanDefinitions;
import org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension__BeanDefinitions;
import org.springframework.data.jpa.repository.support.DefaultJpaContext__BeanDefinitions;
import org.springframework.data.jpa.repository.support.EntityManagerBeanDefinitionRegistrarPostProcessor__BeanDefinitions;
import org.springframework.data.jpa.repository.support.JpaEvaluationContextExtension__BeanDefinitions;
import org.springframework.data.jpa.util.JpaMetamodelCacheCleanup__BeanDefinitions;
import org.springframework.data.repository.core.support.PropertiesBasedNamedQueries__BeanDefinitions;
import org.springframework.data.repository.core.support.RepositoryComposition__BeanDefinitions;
import org.springframework.data.web.config.ProjectingArgumentResolverRegistrar__BeanDefinitions;
import org.springframework.data.web.config.SpringDataJacksonConfiguration__BeanDefinitions;
import org.springframework.data.web.config.SpringDataWebConfiguration__BeanDefinitions;
import org.springframework.data.web.config.SpringDataWebSettings__BeanDefinitions;
import org.springframework.orm.jpa.SharedEntityManagerCreator__BeanDefinitions;
import org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration__BeanDefinitions;
import org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration__BeanDefinitions;
import org.springframework.security.config.annotation.method.configuration.AuthorizationProxyConfiguration__BeanDefinitions;
import org.springframework.security.config.annotation.method.configuration.Jsr250MethodSecurityConfiguration__BeanDefinitions;
import org.springframework.security.config.annotation.method.configuration.PrePostMethodSecurityConfiguration__BeanDefinitions;
import org.springframework.security.config.annotation.method.configuration.SecuredMethodSecurityConfiguration__BeanDefinitions;
import org.springframework.security.config.annotation.web.configuration.HttpSecurityConfiguration__BeanDefinitions;
import org.springframework.security.config.annotation.web.configuration.OAuth2ClientConfiguration__BeanDefinitions;
import org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration__BeanDefinitions;
import org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration__BeanDefinitions;
import org.springframework.security.web.access.HandlerMappingIntrospectorRequestTransformer__BeanDefinitions;
import org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration__BeanDefinitions;
import org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration__BeanDefinitions;

/**
 * Register bean definitions for the bean factory.
 */
@Generated
public class NouvelleProcedureApplication__BeanFactoryRegistrations {
  /**
   * Register the bean definitions.
   */
  public void registerBeanDefinitions(DefaultListableBeanFactory beanFactory) {
    beanFactory.registerBeanDefinition("org.springframework.context.event.internalEventListenerProcessor", EventListenerMethodProcessor__BeanDefinitions.getInternalEventListenerProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.context.event.internalEventListenerFactory", DefaultEventListenerFactory__BeanDefinitions.getInternalEventListenerFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("nouvelleProcedureApplication", NouvelleProcedureApplication__BeanDefinitions.getNouvelleProcedureApplicationBeanDefinition());
    beanFactory.registerBeanDefinition("metierController", MetierController__BeanDefinitions.getMetierControllerBeanDefinition());
    beanFactory.registerBeanDefinition("securedMetierController", SecuredMetierController__BeanDefinitions.getSecuredMetierControllerBeanDefinition());
    beanFactory.registerBeanDefinition("crudMetierServiceImpl", CrudMetierServiceImpl__BeanDefinitions.getCrudMetierServiceImplBeanDefinition());
    beanFactory.registerBeanDefinition("specificMetierServiceImpl", SpecificMetierServiceImpl__BeanDefinitions.getSpecificMetierServiceImplBeanDefinition());
    beanFactory.registerBeanDefinition("globalExceptionHandler", GlobalExceptionHandler__BeanDefinitions.getGlobalExceptionHandlerBeanDefinition());
    beanFactory.registerBeanDefinition("securityConfig", SecurityConfig__BeanDefinitions.getSecurityConfigBeanDefinition());
    beanFactory.registerBeanDefinition("webConfig", WebConfig__BeanDefinitions.getWebConfigBeanDefinition());
    beanFactory.registerBeanDefinition("loginController", LoginController__BeanDefinitions.getLoginControllerBeanDefinition());
    beanFactory.registerBeanDefinition("customOAuth2UserService", CustomOAuth2UserService__BeanDefinitions.getCustomOAuthUserServiceBeanDefinition());
    beanFactory.registerBeanDefinition("httpCookieOAuth2AuthorizationRequestRepository", HttpCookieOAuth2AuthorizationRequestRepository__BeanDefinitions.getHttpCookieOAuthAuthorizationRequestRepositoryBeanDefinition());
    beanFactory.registerBeanDefinition("OAuth2AuthenticationFailureHandler", OAuth2AuthenticationFailureHandler__BeanDefinitions.getOAuthAuthenticationFailureHandlerBeanDefinition());
    beanFactory.registerBeanDefinition("OAuth2AuthenticationSuccessHandler", OAuth2AuthenticationSuccessHandler__BeanDefinitions.getOAuthAuthenticationSuccessHandlerBeanDefinition());
    beanFactory.registerBeanDefinition("appProperties", AppProperties__BeanDefinitions.getAppPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("customAuthenticationEntryPoint", CustomAuthenticationEntryPoint__BeanDefinitions.getCustomAuthenticationEntryPointBeanDefinition());
    beanFactory.registerBeanDefinition("customUserDetailsService", CustomUserDetailsService__BeanDefinitions.getCustomUserDetailsServiceBeanDefinition());
    beanFactory.registerBeanDefinition("tokenProvider", TokenProvider__BeanDefinitions.getTokenProviderBeanDefinition());
    beanFactory.registerBeanDefinition("securityServiceImp", SecurityServiceImp__BeanDefinitions.getSecurityServiceImpBeanDefinition());
    beanFactory.registerBeanDefinition("fileController", FileController__BeanDefinitions.getFileControllerBeanDefinition());
    beanFactory.registerBeanDefinition("fileStorageServiceImpl", FileStorageServiceImpl__BeanDefinitions.getFileStorageServiceImplBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration", ObjectPostProcessorConfiguration__BeanDefinitions.getObjectPostProcessorConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("objectPostProcessor", ObjectPostProcessorConfiguration__BeanDefinitions.getObjectPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration", AuthenticationConfiguration__BeanDefinitions.getAuthenticationConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("authenticationManagerBuilder", AuthenticationConfiguration__BeanDefinitions.getAuthenticationManagerBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("enableGlobalAuthenticationAutowiredConfigurer", AuthenticationConfiguration__BeanDefinitions.getEnableGlobalAuthenticationAutowiredConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("initializeUserDetailsBeanManagerConfigurer", AuthenticationConfiguration__BeanDefinitions.getInitializeUserDetailsBeanManagerConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("initializeAuthenticationProviderBeanManagerConfigurer", AuthenticationConfiguration__BeanDefinitions.getInitializeAuthenticationProviderBeanManagerConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration", WebSecurityConfiguration__BeanDefinitions.getWebSecurityConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("delegatingApplicationListener", WebSecurityConfiguration__BeanDefinitions.getDelegatingApplicationListenerBeanDefinition());
    beanFactory.registerBeanDefinition("webSecurityExpressionHandler", WebSecurityConfiguration__BeanDefinitions.getWebSecurityExpressionHandlerBeanDefinition());
    beanFactory.registerBeanDefinition("privilegeEvaluator", WebSecurityConfiguration__BeanDefinitions.getPrivilegeEvaluatorBeanDefinition());
    beanFactory.registerBeanDefinition("conversionServicePostProcessor", WebSecurityConfiguration__BeanDefinitions.getConversionServicePostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration", WebMvcSecurityConfiguration__BeanDefinitions.getWebMvcSecurityConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("requestDataValueProcessor", WebMvcSecurityConfiguration__BeanDefinitions.getRequestDataValueProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("springSecurityHandlerMappingIntrospectorBeanDefinitionRegistryPostProcessor", WebMvcSecurityConfiguration__BeanDefinitions.getSpringSecurityHandlerMappingIntrospectorBeanDefinitionRegistryPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.security.config.annotation.web.configuration.OAuth2ClientConfiguration$OAuth2ClientWebMvcSecurityConfiguration", OAuth2ClientConfiguration__BeanDefinitions.OAuth2ClientWebMvcSecurityConfiguration.getOAuthClientWebMvcSecurityConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.security.config.annotation.web.configuration.OAuth2ClientConfiguration$OAuth2AuthorizedClientManagerConfiguration", OAuth2ClientConfiguration__BeanDefinitions.OAuth2AuthorizedClientManagerConfiguration.getOAuthAuthorizedClientManagerConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("authorizedClientManagerRegistrar", OAuth2ClientConfiguration__BeanDefinitions.OAuth2AuthorizedClientManagerConfiguration.getAuthorizedClientManagerRegistrarBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.security.config.annotation.web.configuration.OAuth2ClientConfiguration", OAuth2ClientConfiguration__BeanDefinitions.getOAuthClientConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.security.config.annotation.web.configuration.HttpSecurityConfiguration", HttpSecurityConfiguration__BeanDefinitions.getHttpSecurityConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.security.config.annotation.web.configuration.HttpSecurityConfiguration.httpSecurity", HttpSecurityConfiguration__BeanDefinitions.getHttpSecurityBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.security.config.annotation.method.configuration.PrePostMethodSecurityConfiguration", PrePostMethodSecurityConfiguration__BeanDefinitions.getPrePostMethodSecurityConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("preFilterAuthorizationMethodInterceptor", PrePostMethodSecurityConfiguration__BeanDefinitions.getPreFilterAuthorizationMethodInterceptorBeanDefinition());
    beanFactory.registerBeanDefinition("preAuthorizeAuthorizationMethodInterceptor", PrePostMethodSecurityConfiguration__BeanDefinitions.getPreAuthorizeAuthorizationMethodInterceptorBeanDefinition());
    beanFactory.registerBeanDefinition("postAuthorizeAuthorizationMethodInterceptor", PrePostMethodSecurityConfiguration__BeanDefinitions.getPostAuthorizeAuthorizationMethodInterceptorBeanDefinition());
    beanFactory.registerBeanDefinition("postFilterAuthorizationMethodInterceptor", PrePostMethodSecurityConfiguration__BeanDefinitions.getPostFilterAuthorizationMethodInterceptorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.security.config.annotation.method.configuration.SecuredMethodSecurityConfiguration", SecuredMethodSecurityConfiguration__BeanDefinitions.getSecuredMethodSecurityConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("securedAuthorizationMethodInterceptor", SecuredMethodSecurityConfiguration__BeanDefinitions.getSecuredAuthorizationMethodInterceptorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.security.config.annotation.method.configuration.Jsr250MethodSecurityConfiguration", Jsr250MethodSecurityConfiguration__BeanDefinitions.getJsrMethodSecurityConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jsr250AuthorizationMethodInterceptor", Jsr250MethodSecurityConfiguration__BeanDefinitions.getJsrAuthorizationMethodInterceptorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.security.config.annotation.method.configuration.AuthorizationProxyConfiguration", AuthorizationProxyConfiguration__BeanDefinitions.getAuthorizationProxyConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("authorizationProxyFactory", AuthorizationProxyConfiguration__BeanDefinitions.getAuthorizationProxyFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("authorizeReturnObjectMethodInterceptor", AuthorizationProxyConfiguration__BeanDefinitions.getAuthorizeReturnObjectMethodInterceptorBeanDefinition());
    beanFactory.registerBeanDefinition("configureFirewall", SecurityConfig__BeanDefinitions.getConfigureFirewallBeanDefinition());
    beanFactory.registerBeanDefinition("passwordEncoder", SecurityConfig__BeanDefinitions.getPasswordEncoderBeanDefinition());
    beanFactory.registerBeanDefinition("authenticationManager", SecurityConfig__BeanDefinitions.getAuthenticationManagerBeanDefinition());
    beanFactory.registerBeanDefinition("cookieAuthorizationRequestRepository", SecurityConfig__BeanDefinitions.getCookieAuthorizationRequestRepositoryBeanDefinition());
    beanFactory.registerBeanDefinition("corsConfigurationSource", SecurityConfig__BeanDefinitions.getCorsConfigurationSourceBeanDefinition());
    beanFactory.registerBeanDefinition("filterChain", SecurityConfig__BeanDefinitions.getFilterChainBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.aop.config.internalAutoProxyCreator", AnnotationAwareAspectJAutoProxyCreator__BeanDefinitions.getInternalAutoProxyCreatorBeanDefinition());
    beanFactory.registerBeanDefinition("preFilterAuthorizationAdvisor", PrePostMethodSecurityConfiguration__BeanDefinitions.getPreFilterAuthorizationAdvisorBeanDefinition());
    beanFactory.registerBeanDefinition("preAuthorizeAuthorizationAdvisor", PrePostMethodSecurityConfiguration__BeanDefinitions.getPreAuthorizeAuthorizationAdvisorBeanDefinition());
    beanFactory.registerBeanDefinition("postFilterAuthorizationAdvisor", PrePostMethodSecurityConfiguration__BeanDefinitions.getPostFilterAuthorizationAdvisorBeanDefinition());
    beanFactory.registerBeanDefinition("postAuthorizeAuthorizationAdvisor", PrePostMethodSecurityConfiguration__BeanDefinitions.getPostAuthorizeAuthorizationAdvisorBeanDefinition());
    beanFactory.registerBeanDefinition("securedAuthorizationAdvisor", SecuredMethodSecurityConfiguration__BeanDefinitions.getSecuredAuthorizationAdvisorBeanDefinition());
    beanFactory.registerBeanDefinition("jsr250AuthorizationAdvisor", Jsr250MethodSecurityConfiguration__BeanDefinitions.getJsrAuthorizationAdvisorBeanDefinition());
    beanFactory.registerBeanDefinition("authorizeReturnObjectAdvisor", AuthorizationProxyConfiguration__BeanDefinitions.getAuthorizeReturnObjectAdvisorBeanDefinition());
    beanFactory.registerBeanDefinition("jwtEncoder", TokenProvider__BeanDefinitions.getJwtEncoderBeanDefinition());
    beanFactory.registerBeanDefinition("jwtDecoder", TokenProvider__BeanDefinitions.getJwtDecoderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.domain.EntityScanPackages", EntityScanPackages__BeanDefinitions.getEntityScanPackagesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.context.config.internalBeanConfigurerAspect", AnnotationBeanConfigurerAspect__BeanDefinitions.getInternalBeanConfigurerAspectBeanDefinition());
    beanFactory.registerBeanDefinition("jpaAuditingHandler", AuditingHandler__BeanDefinitions.getJpaAuditingHandlerBeanDefinition());
    beanFactory.registerBeanDefinition("jpaMappingContext", JpaMetamodelMappingContext__BeanDefinitions.getJpaMappingContextBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.data.jpa.domain.support.AuditingEntityListener", AuditingEntityListener__BeanDefinitions.getAuditingEntityListenerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor", AuditingBeanFactoryPostProcessor__BeanDefinitions.getAuditingBeanFactoryPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension#0", JpaRepositoryConfigExtension__BeanDefinitions.getJpaRepositoryConfigExtensionBeanDefinition());
    beanFactory.registerBeanDefinition("jpaSharedEM_entityManagerFactory", SharedEntityManagerCreator__BeanDefinitions.getJpaSharedEMentityManagerFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("emBeanDefinitionRegistrarPostProcessor", EntityManagerBeanDefinitionRegistrarPostProcessor__BeanDefinitions.getEmBeanDefinitionRegistrarPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("jpaContext", DefaultJpaContext__BeanDefinitions.getJpaContextBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.data.jpa.util.JpaMetamodelCacheCleanup", JpaMetamodelCacheCleanup__BeanDefinitions.getJpaMetamodelCacheCleanupBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.data.jpa.repository.support.JpaEvaluationContextExtension", JpaEvaluationContextExtension__BeanDefinitions.getJpaEvaluationContextExtensionBeanDefinition());
    beanFactory.registerBeanDefinition("jpa.named-queries#0", PropertiesBasedNamedQueries__BeanDefinitions.getNamedqueriesBeanDefinition());
    beanFactory.registerBeanDefinition("jpa.ProcedureRepository.fragments#0", RepositoryComposition__BeanDefinitions.RepositoryFragments.getFragmentsBeanDefinition());
    beanFactory.registerBeanDefinition("procedureRepository", ProcedureRepository__BeanDefinitions.getProcedureRepositoryBeanDefinition());
    beanFactory.registerBeanDefinition("jpa.named-queries#1", PropertiesBasedNamedQueries__BeanDefinitions.getNamedqueriesBeanDefinition1());
    beanFactory.registerBeanDefinition("jpa.RoleRepository.fragments#0", RepositoryComposition__BeanDefinitions.RepositoryFragments.getFragmentsBeanDefinition1());
    beanFactory.registerBeanDefinition("roleRepository", RoleRepository__BeanDefinitions.getRoleRepositoryBeanDefinition());
    beanFactory.registerBeanDefinition("jpa.named-queries#2", PropertiesBasedNamedQueries__BeanDefinitions.getNamedqueriesBeanDefinition2());
    beanFactory.registerBeanDefinition("jpa.UserRepository.fragments#0", RepositoryComposition__BeanDefinitions.RepositoryFragments.getFragmentsBeanDefinition2());
    beanFactory.registerBeanDefinition("userRepository", UserRepository__BeanDefinitions.getUserRepositoryBeanDefinition());
    beanFactory.registerBeanDefinition("jpa.named-queries#3", PropertiesBasedNamedQueries__BeanDefinitions.getNamedqueriesBeanDefinition3());
    beanFactory.registerBeanDefinition("jpa.ServiceRepository.fragments#0", RepositoryComposition__BeanDefinitions.RepositoryFragments.getFragmentsBeanDefinition3());
    beanFactory.registerBeanDefinition("serviceRepository", ServiceRepository__BeanDefinitions.getServiceRepositoryBeanDefinition());
    beanFactory.registerBeanDefinition("jpa.named-queries#4", PropertiesBasedNamedQueries__BeanDefinitions.getNamedqueriesBeanDefinition4());
    beanFactory.registerBeanDefinition("jpa.FileRepository.fragments#0", RepositoryComposition__BeanDefinitions.RepositoryFragments.getFragmentsBeanDefinition4());
    beanFactory.registerBeanDefinition("fileRepository", FileRepository__BeanDefinitions.getFileRepositoryBeanDefinition());
    beanFactory.registerBeanDefinition("jpa.named-queries#5", PropertiesBasedNamedQueries__BeanDefinitions.getNamedqueriesBeanDefinition5());
    beanFactory.registerBeanDefinition("jpa.DepartementRepository.fragments#0", RepositoryComposition__BeanDefinitions.RepositoryFragments.getFragmentsBeanDefinition5());
    beanFactory.registerBeanDefinition("departementRepository", DepartementRepository__BeanDefinitions.getDepartementRepositoryBeanDefinition());
    beanFactory.registerBeanDefinition("jpa.named-queries#6", PropertiesBasedNamedQueries__BeanDefinitions.getNamedqueriesBeanDefinition6());
    beanFactory.registerBeanDefinition("jpa.PosteRepository.fragments#0", RepositoryComposition__BeanDefinitions.RepositoryFragments.getFragmentsBeanDefinition6());
    beanFactory.registerBeanDefinition("posteRepository", PosteRepository__BeanDefinitions.getPosteRepositoryBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor", ConfigurationPropertiesBindingPostProcessor__BeanDefinitions.getConfigurationPropertiesBindingPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.context.internalConfigurationPropertiesBinder", ConfigurationPropertiesBinder__BeanDefinitions.ConfigurationPropertiesBinderFactory.getInternalConfigurationPropertiesBinderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.context.properties.BoundConfigurationProperties", BoundConfigurationProperties__BeanDefinitions.getBoundConfigurationPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter", MethodValidationExcludeFilter__BeanDefinitions.getMethodValidationExcludeFilterBeanDefinition());
    beanFactory.registerBeanDefinition("rsa-com.dogognon.sohliou.kone.security.config.RsakeysConfig", RsakeysConfig__BeanDefinitions.getRsakeysConfigBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.AutoConfigurationPackages", AutoConfigurationPackages__BeanDefinitions.BasePackages.getAutoConfigurationPackagesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration", PropertyPlaceholderAutoConfiguration__BeanDefinitions.getPropertyPlaceholderAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("propertySourcesPlaceholderConfigurer", PropertyPlaceholderAutoConfiguration__BeanDefinitions.getPropertySourcesPlaceholderConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration", SslAutoConfiguration__BeanDefinitions.getSslAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("fileWatcher", SslAutoConfiguration__BeanDefinitions.getFileWatcherBeanDefinition());
    beanFactory.registerBeanDefinition("sslPropertiesSslBundleRegistrar", SslAutoConfiguration__BeanDefinitions.getSslPropertiesSslBundleRegistrarBeanDefinition());
    beanFactory.registerBeanDefinition("sslBundleRegistry", SslAutoConfiguration__BeanDefinitions.getSslBundleRegistryBeanDefinition());
    beanFactory.registerBeanDefinition("spring.ssl-org.springframework.boot.autoconfigure.ssl.SslProperties", SslProperties__BeanDefinitions.getSslPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration", WebSocketServletAutoConfiguration__BeanDefinitions.TomcatWebSocketConfiguration.getTomcatWebSocketConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("websocketServletWebServerCustomizer", WebSocketServletAutoConfiguration__BeanDefinitions.TomcatWebSocketConfiguration.getWebsocketServletWebServerCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration", WebSocketServletAutoConfiguration__BeanDefinitions.getWebSocketServletAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat", ServletWebServerFactoryConfiguration__BeanDefinitions.EmbeddedTomcat.getEmbeddedTomcatBeanDefinition());
    beanFactory.registerBeanDefinition("tomcatServletWebServerFactory", ServletWebServerFactoryConfiguration__BeanDefinitions.EmbeddedTomcat.getTomcatServletWebServerFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration", ServletWebServerFactoryAutoConfiguration__BeanDefinitions.getServletWebServerFactoryAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("servletWebServerFactoryCustomizer", ServletWebServerFactoryAutoConfiguration__BeanDefinitions.getServletWebServerFactoryCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("tomcatServletWebServerFactoryCustomizer", ServletWebServerFactoryAutoConfiguration__BeanDefinitions.getTomcatServletWebServerFactoryCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("server-org.springframework.boot.autoconfigure.web.ServerProperties", ServerProperties__BeanDefinitions.getServerPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("webServerFactoryCustomizerBeanPostProcessor", WebServerFactoryCustomizerBeanPostProcessor__BeanDefinitions.getWebServerFactoryCustomizerBeanPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("errorPageRegistrarBeanPostProcessor", ErrorPageRegistrarBeanPostProcessor__BeanDefinitions.getErrorPageRegistrarBeanPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration", DispatcherServletAutoConfiguration__BeanDefinitions.DispatcherServletConfiguration.getDispatcherServletConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("dispatcherServlet", DispatcherServletAutoConfiguration__BeanDefinitions.DispatcherServletConfiguration.getDispatcherServletBeanDefinition());
    beanFactory.registerBeanDefinition("spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties", WebMvcProperties__BeanDefinitions.getWebMvcPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration", DispatcherServletAutoConfiguration__BeanDefinitions.DispatcherServletRegistrationConfiguration.getDispatcherServletRegistrationConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("dispatcherServletRegistration", DispatcherServletAutoConfiguration__BeanDefinitions.DispatcherServletRegistrationConfiguration.getDispatcherServletRegistrationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration", DispatcherServletAutoConfiguration__BeanDefinitions.getDispatcherServletAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$ThreadPoolTaskExecutorBuilderConfiguration", TaskExecutorConfigurations__BeanDefinitions.ThreadPoolTaskExecutorBuilderConfiguration.getThreadPoolTaskExecutorBuilderConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("threadPoolTaskExecutorBuilder", TaskExecutorConfigurations__BeanDefinitions.ThreadPoolTaskExecutorBuilderConfiguration.getThreadPoolTaskExecutorBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorBuilderConfiguration", TaskExecutorConfigurations__BeanDefinitions.TaskExecutorBuilderConfiguration.getTaskExecutorBuilderConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("taskExecutorBuilder", TaskExecutorConfigurations__BeanDefinitions.TaskExecutorBuilderConfiguration.getTaskExecutorBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$SimpleAsyncTaskExecutorBuilderConfiguration", TaskExecutorConfigurations__BeanDefinitions.SimpleAsyncTaskExecutorBuilderConfiguration.getSimpleAsyncTaskExecutorBuilderConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("simpleAsyncTaskExecutorBuilder", TaskExecutorConfigurations__BeanDefinitions.SimpleAsyncTaskExecutorBuilderConfiguration.getSimpleAsyncTaskExecutorBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorConfiguration", TaskExecutorConfigurations__BeanDefinitions.TaskExecutorConfiguration.getTaskExecutorConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("applicationTaskExecutor", TaskExecutorConfigurations__BeanDefinitions.TaskExecutorConfiguration.getApplicationTaskExecutorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration", TaskExecutionAutoConfiguration__BeanDefinitions.getTaskExecutionAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties", TaskExecutionProperties__BeanDefinitions.getTaskExecutionPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration", ValidationAutoConfiguration__BeanDefinitions.getValidationAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("defaultValidator", ValidationAutoConfiguration__BeanDefinitions.getDefaultValidatorBeanDefinition());
    beanFactory.registerBeanDefinition("methodValidationPostProcessor", ValidationAutoConfiguration__BeanDefinitions.getMethodValidationPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration", ErrorMvcAutoConfiguration__BeanDefinitions.WhitelabelErrorViewConfiguration.getWhitelabelErrorViewConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("error", ErrorMvcAutoConfiguration__BeanDefinitions.WhitelabelErrorViewConfiguration.getErrorBeanDefinition());
    beanFactory.registerBeanDefinition("beanNameViewResolver", ErrorMvcAutoConfiguration__BeanDefinitions.WhitelabelErrorViewConfiguration.getBeanNameViewResolverBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration", ErrorMvcAutoConfiguration__BeanDefinitions.DefaultErrorViewResolverConfiguration.getDefaultErrorViewResolverConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("conventionErrorViewResolver", ErrorMvcAutoConfiguration__BeanDefinitions.DefaultErrorViewResolverConfiguration.getConventionErrorViewResolverBeanDefinition());
    beanFactory.registerBeanDefinition("spring.web-org.springframework.boot.autoconfigure.web.WebProperties", WebProperties__BeanDefinitions.getWebPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration", ErrorMvcAutoConfiguration__BeanDefinitions.getErrorMvcAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("errorAttributes", ErrorMvcAutoConfiguration__BeanDefinitions.getErrorAttributesBeanDefinition());
    beanFactory.registerBeanDefinition("basicErrorController", ErrorMvcAutoConfiguration__BeanDefinitions.getBasicErrorControllerBeanDefinition());
    beanFactory.registerBeanDefinition("errorPageCustomizer", ErrorMvcAutoConfiguration__BeanDefinitions.getErrorPageCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("preserveErrorControllerTargetClassPostProcessor", ErrorMvcAutoConfiguration__BeanDefinitions.getPreserveErrorControllerTargetClassPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getEnableWebMvcConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("welcomePageHandlerMapping", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getWelcomePageHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("welcomePageNotAcceptableHandlerMapping", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getWelcomePageNotAcceptableHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("localeResolver", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getLocaleResolverBeanDefinition());
    beanFactory.registerBeanDefinition("themeResolver", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getThemeResolverBeanDefinition());
    beanFactory.registerBeanDefinition("flashMapManager", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getFlashMapManagerBeanDefinition());
    beanFactory.registerBeanDefinition("mvcConversionService", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getMvcConversionServiceBeanDefinition());
    beanFactory.registerBeanDefinition("mvcValidator", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getMvcValidatorBeanDefinition());
    beanFactory.registerBeanDefinition("mvcContentNegotiationManager", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getMvcContentNegotiationManagerBeanDefinition());
    beanFactory.registerBeanDefinition("requestMappingHandlerMapping", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getRequestMappingHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("mvcPatternParser", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getMvcPatternParserBeanDefinition());
    beanFactory.registerBeanDefinition("mvcUrlPathHelper", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getMvcUrlPathHelperBeanDefinition());
    beanFactory.registerBeanDefinition("mvcPathMatcher", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getMvcPathMatcherBeanDefinition());
    beanFactory.registerBeanDefinition("viewControllerHandlerMapping", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getViewControllerHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("beanNameHandlerMapping", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getBeanNameHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("routerFunctionMapping", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getRouterFunctionMappingBeanDefinition());
    beanFactory.registerBeanDefinition("resourceHandlerMapping", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getResourceHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("mvcResourceUrlProvider", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getMvcResourceUrlProviderBeanDefinition());
    beanFactory.registerBeanDefinition("defaultServletHandlerMapping", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getDefaultServletHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("requestMappingHandlerAdapter", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getRequestMappingHandlerAdapterBeanDefinition());
    beanFactory.registerBeanDefinition("handlerFunctionAdapter", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getHandlerFunctionAdapterBeanDefinition());
    beanFactory.registerBeanDefinition("mvcUriComponentsContributor", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getMvcUriComponentsContributorBeanDefinition());
    beanFactory.registerBeanDefinition("httpRequestHandlerAdapter", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getHttpRequestHandlerAdapterBeanDefinition());
    beanFactory.registerBeanDefinition("simpleControllerHandlerAdapter", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getSimpleControllerHandlerAdapterBeanDefinition());
    beanFactory.registerBeanDefinition("handlerExceptionResolver", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getHandlerExceptionResolverBeanDefinition());
    beanFactory.registerBeanDefinition("mvcViewResolver", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getMvcViewResolverBeanDefinition());
    beanFactory.registerBeanDefinition("mvcHandlerMappingIntrospector", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getMvcHandlerMappingIntrospectorBeanDefinition());
    beanFactory.registerBeanDefinition("viewNameTranslator", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getViewNameTranslatorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter", WebMvcAutoConfiguration__BeanDefinitions.WebMvcAutoConfigurationAdapter.getWebMvcAutoConfigurationAdapterBeanDefinition());
    beanFactory.registerBeanDefinition("defaultViewResolver", WebMvcAutoConfiguration__BeanDefinitions.WebMvcAutoConfigurationAdapter.getDefaultViewResolverBeanDefinition());
    beanFactory.registerBeanDefinition("viewResolver", WebMvcAutoConfiguration__BeanDefinitions.WebMvcAutoConfigurationAdapter.getViewResolverBeanDefinition());
    beanFactory.registerBeanDefinition("requestContextFilter", WebMvcAutoConfiguration__BeanDefinitions.WebMvcAutoConfigurationAdapter.getRequestContextFilterBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration", WebMvcAutoConfiguration__BeanDefinitions.getWebMvcAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("formContentFilter", WebMvcAutoConfiguration__BeanDefinitions.getFormContentFilterBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration", ApplicationAvailabilityAutoConfiguration__BeanDefinitions.getApplicationAvailabilityAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("applicationAvailability", ApplicationAvailabilityAutoConfiguration__BeanDefinitions.getApplicationAvailabilityBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration", AvailabilityHealthContributorAutoConfiguration__BeanDefinitions.getAvailabilityHealthContributorAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration", JtaAutoConfiguration__BeanDefinitions.getJtaAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari", DataSourceConfiguration__BeanDefinitions.Hikari.getHikariBeanDefinition());
    beanFactory.registerBeanDefinition("jdbcConnectionDetailsHikariBeanPostProcessor", DataSourceConfiguration__BeanDefinitions.Hikari.getJdbcConnectionDetailsHikariBeanPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("dataSource", DataSourceConfiguration__BeanDefinitions.Hikari.getDataSourceBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari", DataSourceJmxConfiguration__BeanDefinitions.Hikari.getHikariBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration", DataSourceJmxConfiguration__BeanDefinitions.getDataSourceJmxConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration", DataSourceAutoConfiguration__BeanDefinitions.PooledDataSourceConfiguration.getPooledDataSourceConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jdbcConnectionDetails", DataSourceAutoConfiguration__BeanDefinitions.PooledDataSourceConfiguration.getJdbcConnectionDetailsBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration", DataSourcePoolMetadataProvidersConfiguration__BeanDefinitions.HikariPoolDataSourceMetadataProviderConfiguration.getHikariPoolDataSourceMetadataProviderConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("hikariPoolDataSourceMetadataProvider", DataSourcePoolMetadataProvidersConfiguration__BeanDefinitions.HikariPoolDataSourceMetadataProviderConfiguration.getHikariPoolDataSourceMetadataProviderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration", DataSourcePoolMetadataProvidersConfiguration__BeanDefinitions.getDataSourcePoolMetadataProvidersConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration", DataSourceAutoConfiguration__BeanDefinitions.getDataSourceAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties", DataSourceProperties__BeanDefinitions.getDataSourcePropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizationAutoConfiguration", TransactionManagerCustomizationAutoConfiguration__BeanDefinitions.getTransactionManagerCustomizationAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("platformTransactionManagerCustomizers", TransactionManagerCustomizationAutoConfiguration__BeanDefinitions.getPlatformTransactionManagerCustomizersBeanDefinition());
    beanFactory.registerBeanDefinition("transactionExecutionListeners", TransactionManagerCustomizationAutoConfiguration__BeanDefinitions.getTransactionExecutionListenersBeanDefinition());
    beanFactory.registerBeanDefinition("spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties", TransactionProperties__BeanDefinitions.getTransactionPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration", JpaBaseConfiguration__BeanDefinitions.JpaWebConfiguration.getJpaWebConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("openEntityManagerInViewInterceptor", JpaBaseConfiguration__BeanDefinitions.JpaWebConfiguration.getOpenEntityManagerInViewInterceptorBeanDefinition());
    beanFactory.registerBeanDefinition("openEntityManagerInViewInterceptorConfigurer", JpaBaseConfiguration__BeanDefinitions.JpaWebConfiguration.getOpenEntityManagerInViewInterceptorConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$PersistenceManagedTypesConfiguration", JpaBaseConfiguration__BeanDefinitions.PersistenceManagedTypesConfiguration.getPersistenceManagedTypesConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("persistenceManagedTypes", JpaBaseConfiguration__BeanDefinitions.PersistenceManagedTypesConfiguration.getPersistenceManagedTypesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration", HibernateJpaConfiguration__BeanDefinitions.getHibernateJpaConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("transactionManager", HibernateJpaConfiguration__BeanDefinitions.getTransactionManagerBeanDefinition());
    beanFactory.registerBeanDefinition("jpaVendorAdapter", HibernateJpaConfiguration__BeanDefinitions.getJpaVendorAdapterBeanDefinition());
    beanFactory.registerBeanDefinition("entityManagerFactoryBuilder", HibernateJpaConfiguration__BeanDefinitions.getEntityManagerFactoryBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("entityManagerFactory", HibernateJpaConfiguration__BeanDefinitions.getEntityManagerFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("spring.jpa.hibernate-org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties", HibernateProperties__BeanDefinitions.getHibernatePropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties", JpaProperties__BeanDefinitions.getJpaPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration", HibernateJpaAutoConfiguration__BeanDefinitions.getHibernateJpaAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration", JacksonAutoConfiguration__BeanDefinitions.Jackson2ObjectMapperBuilderCustomizerConfiguration.getJacksonObjectMapperBuilderCustomizerConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("standardJacksonObjectMapperBuilderCustomizer", JacksonAutoConfiguration__BeanDefinitions.Jackson2ObjectMapperBuilderCustomizerConfiguration.getStandardJacksonObjectMapperBuilderCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties", JacksonProperties__BeanDefinitions.getJacksonPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration", JacksonAutoConfiguration__BeanDefinitions.JacksonObjectMapperBuilderConfiguration.getJacksonObjectMapperBuilderConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jacksonObjectMapperBuilder", JacksonAutoConfiguration__BeanDefinitions.JacksonObjectMapperBuilderConfiguration.getJacksonObjectMapperBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration", JacksonAutoConfiguration__BeanDefinitions.ParameterNamesModuleConfiguration.getParameterNamesModuleConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("parameterNamesModule", JacksonAutoConfiguration__BeanDefinitions.ParameterNamesModuleConfiguration.getParameterNamesModuleBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration", JacksonAutoConfiguration__BeanDefinitions.JacksonObjectMapperConfiguration.getJacksonObjectMapperConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jacksonObjectMapper", JacksonAutoConfiguration__BeanDefinitions.JacksonObjectMapperConfiguration.getJacksonObjectMapperBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonMixinConfiguration", JacksonAutoConfiguration__BeanDefinitions.JacksonMixinConfiguration.getJacksonMixinConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jsonMixinModuleEntries", JsonMixinModuleEntries__BeanDefinitions.getJsonMixinModuleEntriesBeanDefinition());
    beanFactory.registerBeanDefinition("jsonMixinModule", JacksonAutoConfiguration__BeanDefinitions.JacksonMixinConfiguration.getJsonMixinModuleBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration", JacksonAutoConfiguration__BeanDefinitions.getJacksonAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jsonComponentModule", JacksonAutoConfiguration__BeanDefinitions.getJsonComponentModuleBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration", HealthEndpointConfiguration__BeanDefinitions.getHealthEndpointConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("healthStatusAggregator", HealthEndpointConfiguration__BeanDefinitions.getHealthStatusAggregatorBeanDefinition());
    beanFactory.registerBeanDefinition("healthHttpCodeStatusMapper", HealthEndpointConfiguration__BeanDefinitions.getHealthHttpCodeStatusMapperBeanDefinition());
    beanFactory.registerBeanDefinition("healthEndpointGroups", HealthEndpointConfiguration__BeanDefinitions.getHealthEndpointGroupsBeanDefinition());
    beanFactory.registerBeanDefinition("healthContributorRegistry", HealthEndpointConfiguration__BeanDefinitions.getHealthContributorRegistryBeanDefinition());
    beanFactory.registerBeanDefinition("healthEndpointGroupMembershipValidator", HealthEndpointConfiguration__BeanDefinitions.getHealthEndpointGroupMembershipValidatorBeanDefinition());
    beanFactory.registerBeanDefinition("healthEndpoint", HealthEndpointConfiguration__BeanDefinitions.getHealthEndpointBeanDefinition());
    beanFactory.registerBeanDefinition("healthEndpointGroupsBeanPostProcessor", HealthEndpointConfiguration__BeanDefinitions.getHealthEndpointGroupsBeanPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration$MvcAdditionalHealthEndpointPathsConfiguration", HealthEndpointWebExtensionConfiguration__BeanDefinitions.MvcAdditionalHealthEndpointPathsConfiguration.getMvcAdditionalHealthEndpointPathsConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("healthEndpointWebMvcHandlerMapping", HealthEndpointWebExtensionConfiguration__BeanDefinitions.MvcAdditionalHealthEndpointPathsConfiguration.getHealthEndpointWebMvcHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration", HealthEndpointWebExtensionConfiguration__BeanDefinitions.getHealthEndpointWebExtensionConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("healthEndpointWebExtension", HealthEndpointWebExtensionConfiguration__BeanDefinitions.getHealthEndpointWebExtensionBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.health.HealthEndpointAutoConfiguration", HealthEndpointAutoConfiguration__BeanDefinitions.getHealthEndpointAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("management.endpoint.health-org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties", HealthEndpointProperties__BeanDefinitions.getHealthEndpointPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration", ProjectInfoAutoConfiguration__BeanDefinitions.getProjectInfoAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties", ProjectInfoProperties__BeanDefinitions.getProjectInfoPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration", InfoContributorAutoConfiguration__BeanDefinitions.getInfoContributorAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("management.info-org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties", InfoContributorProperties__BeanDefinitions.getInfoContributorPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementContextAutoConfiguration", ServletManagementContextAutoConfiguration__BeanDefinitions.getServletManagementContextAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("servletWebChildContextFactory", ServletManagementContextAutoConfiguration__BeanDefinitions.getServletWebChildContextFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("managementServletContext", ServletManagementContextAutoConfiguration__BeanDefinitions.getManagementServletContextBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration", EndpointAutoConfiguration__BeanDefinitions.getEndpointAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("endpointOperationParameterMapper", EndpointAutoConfiguration__BeanDefinitions.getEndpointOperationParameterMapperBeanDefinition());
    beanFactory.registerBeanDefinition("endpointCachingOperationInvokerAdvisor", EndpointAutoConfiguration__BeanDefinitions.getEndpointCachingOperationInvokerAdvisorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.endpoint.jackson.JacksonEndpointAutoConfiguration", JacksonEndpointAutoConfiguration__BeanDefinitions.getJacksonEndpointAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("endpointObjectMapper", JacksonEndpointAutoConfiguration__BeanDefinitions.getEndpointObjectMapperBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration$WebEndpointServletConfiguration", WebEndpointAutoConfiguration__BeanDefinitions.WebEndpointServletConfiguration.getWebEndpointServletConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("servletEndpointDiscoverer", WebEndpointAutoConfiguration__BeanDefinitions.WebEndpointServletConfiguration.getServletEndpointDiscovererBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration", WebEndpointAutoConfiguration__BeanDefinitions.getWebEndpointAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("webEndpointPathMapper", WebEndpointAutoConfiguration__BeanDefinitions.getWebEndpointPathMapperBeanDefinition());
    beanFactory.registerBeanDefinition("endpointMediaTypes", WebEndpointAutoConfiguration__BeanDefinitions.getEndpointMediaTypesBeanDefinition());
    beanFactory.registerBeanDefinition("webEndpointDiscoverer", WebEndpointAutoConfiguration__BeanDefinitions.getWebEndpointDiscovererBeanDefinition());
    beanFactory.registerBeanDefinition("controllerEndpointDiscoverer", WebEndpointAutoConfiguration__BeanDefinitions.getControllerEndpointDiscovererBeanDefinition());
    beanFactory.registerBeanDefinition("pathMappedEndpoints", WebEndpointAutoConfiguration__BeanDefinitions.getPathMappedEndpointsBeanDefinition());
    beanFactory.registerBeanDefinition("webExposeExcludePropertyEndpointFilter", WebEndpointAutoConfiguration__BeanDefinitions.getWebExposeExcludePropertyEndpointFilterBeanDefinition());
    beanFactory.registerBeanDefinition("controllerExposeExcludePropertyEndpointFilter", WebEndpointAutoConfiguration__BeanDefinitions.getControllerExposeExcludePropertyEndpointFilterBeanDefinition());
    beanFactory.registerBeanDefinition("management.endpoints.web-org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties", WebEndpointProperties__BeanDefinitions.getWebEndpointPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthContributorAutoConfiguration", DiskSpaceHealthContributorAutoConfiguration__BeanDefinitions.getDiskSpaceHealthContributorAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("diskSpaceHealthIndicator", DiskSpaceHealthContributorAutoConfiguration__BeanDefinitions.getDiskSpaceHealthIndicatorBeanDefinition());
    beanFactory.registerBeanDefinition("management.health.diskspace-org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties", DiskSpaceHealthIndicatorProperties__BeanDefinitions.getDiskSpaceHealthIndicatorPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration", HealthContributorAutoConfiguration__BeanDefinitions.getHealthContributorAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("pingHealthContributor", HealthContributorAutoConfiguration__BeanDefinitions.getPingHealthContributorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthContributorAutoConfiguration", DataSourceHealthContributorAutoConfiguration__BeanDefinitions.getDataSourceHealthContributorAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("dbHealthContributor", DataSourceHealthContributorAutoConfiguration__BeanDefinitions.getDbHealthContributorBeanDefinition());
    beanFactory.registerBeanDefinition("management.health.db-org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthIndicatorProperties", DataSourceHealthIndicatorProperties__BeanDefinitions.getDataSourceHealthIndicatorPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration", MetricsAutoConfiguration__BeanDefinitions.getMetricsAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("micrometerClock", MetricsAutoConfiguration__BeanDefinitions.getMicrometerClockBeanDefinition());
    beanFactory.registerBeanDefinition("meterRegistryPostProcessor", MetricsAutoConfiguration__BeanDefinitions.getMeterRegistryPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("propertiesMeterFilter", MetricsAutoConfiguration__BeanDefinitions.getPropertiesMeterFilterBeanDefinition());
    beanFactory.registerBeanDefinition("meterRegistryCloser", MetricsAutoConfiguration__BeanDefinitions.getMeterRegistryCloserBeanDefinition());
    beanFactory.registerBeanDefinition("management.metrics-org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties", MetricsProperties__BeanDefinitions.getMetricsPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleMetricsExportAutoConfiguration", SimpleMetricsExportAutoConfiguration__BeanDefinitions.getSimpleMetricsExportAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("simpleMeterRegistry", SimpleMetricsExportAutoConfiguration__BeanDefinitions.getSimpleMeterRegistryBeanDefinition());
    beanFactory.registerBeanDefinition("simpleConfig", SimpleMetricsExportAutoConfiguration__BeanDefinitions.getSimpleConfigBeanDefinition());
    beanFactory.registerBeanDefinition("management.simple.metrics.export-org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties", SimpleProperties__BeanDefinitions.getSimplePropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryAutoConfiguration", CompositeMeterRegistryAutoConfiguration__BeanDefinitions.getCompositeMeterRegistryAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.metrics.JvmMetricsAutoConfiguration", JvmMetricsAutoConfiguration__BeanDefinitions.getJvmMetricsAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jvmGcMetrics", JvmMetricsAutoConfiguration__BeanDefinitions.getJvmGcMetricsBeanDefinition());
    beanFactory.registerBeanDefinition("jvmHeapPressureMetrics", JvmMetricsAutoConfiguration__BeanDefinitions.getJvmHeapPressureMetricsBeanDefinition());
    beanFactory.registerBeanDefinition("jvmMemoryMetrics", JvmMetricsAutoConfiguration__BeanDefinitions.getJvmMemoryMetricsBeanDefinition());
    beanFactory.registerBeanDefinition("jvmThreadMetrics", JvmMetricsAutoConfiguration__BeanDefinitions.getJvmThreadMetricsBeanDefinition());
    beanFactory.registerBeanDefinition("classLoaderMetrics", JvmMetricsAutoConfiguration__BeanDefinitions.getClassLoaderMetricsBeanDefinition());
    beanFactory.registerBeanDefinition("jvmInfoMetrics", JvmMetricsAutoConfiguration__BeanDefinitions.getJvmInfoMetricsBeanDefinition());
    beanFactory.registerBeanDefinition("jvmCompilationMetrics", JvmMetricsAutoConfiguration__BeanDefinitions.getJvmCompilationMetricsBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration", LogbackMetricsAutoConfiguration__BeanDefinitions.getLogbackMetricsAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("logbackMetrics", LogbackMetricsAutoConfiguration__BeanDefinitions.getLogbackMetricsBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.metrics.SystemMetricsAutoConfiguration", SystemMetricsAutoConfiguration__BeanDefinitions.getSystemMetricsAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("uptimeMetrics", SystemMetricsAutoConfiguration__BeanDefinitions.getUptimeMetricsBeanDefinition());
    beanFactory.registerBeanDefinition("processorMetrics", SystemMetricsAutoConfiguration__BeanDefinitions.getProcessorMetricsBeanDefinition());
    beanFactory.registerBeanDefinition("fileDescriptorMetrics", SystemMetricsAutoConfiguration__BeanDefinitions.getFileDescriptorMetricsBeanDefinition());
    beanFactory.registerBeanDefinition("diskSpaceMetrics", SystemMetricsAutoConfiguration__BeanDefinitions.getDiskSpaceMetricsBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.metrics.data.RepositoryMetricsAutoConfiguration", RepositoryMetricsAutoConfiguration__BeanDefinitions.getRepositoryMetricsAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("repositoryTagsProvider", RepositoryMetricsAutoConfiguration__BeanDefinitions.getRepositoryTagsProviderBeanDefinition());
    beanFactory.registerBeanDefinition("metricsRepositoryMethodInvocationListener", RepositoryMetricsAutoConfiguration__BeanDefinitions.getMetricsRepositoryMethodInvocationListenerBeanDefinition());
    beanFactory.registerBeanDefinition("metricsRepositoryMethodInvocationListenerBeanPostProcessor", RepositoryMetricsAutoConfiguration__BeanDefinitions.getMetricsRepositoryMethodInvocationListenerBeanPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration", IntegrationMetricsAutoConfiguration__BeanDefinitions.getIntegrationMetricsAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$HikariDataSourceMetricsConfiguration", DataSourcePoolMetricsAutoConfiguration__BeanDefinitions.HikariDataSourceMetricsConfiguration.getHikariDataSourceMetricsConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("hikariDataSourceMeterBinder", DataSourcePoolMetricsAutoConfiguration__BeanDefinitions.HikariDataSourceMetricsConfiguration.getHikariDataSourceMeterBinderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$DataSourcePoolMetadataMetricsConfiguration", DataSourcePoolMetricsAutoConfiguration__BeanDefinitions.DataSourcePoolMetadataMetricsConfiguration.getDataSourcePoolMetadataMetricsConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("dataSourcePoolMetadataMeterBinder", DataSourcePoolMetricsAutoConfiguration__BeanDefinitions.DataSourcePoolMetadataMetricsConfiguration.getDataSourcePoolMetadataMeterBinderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration", DataSourcePoolMetricsAutoConfiguration__BeanDefinitions.getDataSourcePoolMetricsAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.metrics.startup.StartupTimeMetricsListenerAutoConfiguration", StartupTimeMetricsListenerAutoConfiguration__BeanDefinitions.getStartupTimeMetricsListenerAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("startupTimeMetrics", StartupTimeMetricsListenerAutoConfiguration__BeanDefinitions.getStartupTimeMetricsBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$ThreadPoolTaskSchedulerBuilderConfiguration", TaskSchedulingConfigurations__BeanDefinitions.ThreadPoolTaskSchedulerBuilderConfiguration.getThreadPoolTaskSchedulerBuilderConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("threadPoolTaskSchedulerBuilder", TaskSchedulingConfigurations__BeanDefinitions.ThreadPoolTaskSchedulerBuilderConfiguration.getThreadPoolTaskSchedulerBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$TaskSchedulerBuilderConfiguration", TaskSchedulingConfigurations__BeanDefinitions.TaskSchedulerBuilderConfiguration.getTaskSchedulerBuilderConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("taskSchedulerBuilder", TaskSchedulingConfigurations__BeanDefinitions.TaskSchedulerBuilderConfiguration.getTaskSchedulerBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$SimpleAsyncTaskSchedulerBuilderConfiguration", TaskSchedulingConfigurations__BeanDefinitions.SimpleAsyncTaskSchedulerBuilderConfiguration.getSimpleAsyncTaskSchedulerBuilderConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("simpleAsyncTaskSchedulerBuilder", TaskSchedulingConfigurations__BeanDefinitions.SimpleAsyncTaskSchedulerBuilderConfiguration.getSimpleAsyncTaskSchedulerBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration", TaskSchedulingAutoConfiguration__BeanDefinitions.getTaskSchedulingAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties", TaskSchedulingProperties__BeanDefinitions.getTaskSchedulingPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.metrics.task.TaskExecutorMetricsAutoConfiguration", TaskExecutorMetricsAutoConfiguration__BeanDefinitions.getTaskExecutorMetricsAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("eagerTaskExecutorMetrics", TaskExecutorMetricsAutoConfiguration__BeanDefinitions.getEagerTaskExecutorMetricsBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.metrics.web.tomcat.TomcatMetricsAutoConfiguration", TomcatMetricsAutoConfiguration__BeanDefinitions.getTomcatMetricsAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("tomcatMetricsBinder", TomcatMetricsAutoConfiguration__BeanDefinitions.getTomcatMetricsBinderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$ObservedAspectConfiguration", ObservationAutoConfiguration__BeanDefinitions.ObservedAspectConfiguration.getObservedAspectConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("observedAspect", ObservationAutoConfiguration__BeanDefinitions.ObservedAspectConfiguration.getObservedAspectBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$MeterObservationHandlerConfiguration$OnlyMetricsMeterObservationHandlerConfiguration", ObservationAutoConfiguration__BeanDefinitions.MeterObservationHandlerConfiguration.OnlyMetricsMeterObservationHandlerConfiguration.getOnlyMetricsMeterObservationHandlerConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("defaultMeterObservationHandler", ObservationAutoConfiguration__BeanDefinitions.MeterObservationHandlerConfiguration.OnlyMetricsMeterObservationHandlerConfiguration.getDefaultMeterObservationHandlerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$MeterObservationHandlerConfiguration", ObservationAutoConfiguration__BeanDefinitions.MeterObservationHandlerConfiguration.getMeterObservationHandlerConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$OnlyMetricsConfiguration", ObservationAutoConfiguration__BeanDefinitions.OnlyMetricsConfiguration.getOnlyMetricsConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("metricsObservationHandlerGrouping", ObservationAutoConfiguration__BeanDefinitions.OnlyMetricsConfiguration.getMetricsObservationHandlerGroupingBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration", ObservationAutoConfiguration__BeanDefinitions.getObservationAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("observationRegistryPostProcessor", ObservationAutoConfiguration__BeanDefinitions.getObservationRegistryPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("observationRegistry", ObservationAutoConfiguration__BeanDefinitions.getObservationRegistryBeanDefinition());
    beanFactory.registerBeanDefinition("propertiesObservationFilter", ObservationAutoConfiguration__BeanDefinitions.getPropertiesObservationFilterBeanDefinition());
    beanFactory.registerBeanDefinition("management.observations-org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties", ObservationProperties__BeanDefinitions.getObservationPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration", HttpMessageConvertersAutoConfiguration__BeanDefinitions.StringHttpMessageConverterConfiguration.getStringHttpMessageConverterConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("stringHttpMessageConverter", HttpMessageConvertersAutoConfiguration__BeanDefinitions.StringHttpMessageConverterConfiguration.getStringHttpMessageConverterBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration", JacksonHttpMessageConvertersConfiguration__BeanDefinitions.MappingJackson2HttpMessageConverterConfiguration.getMappingJacksonHttpMessageConverterConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("mappingJackson2HttpMessageConverter", JacksonHttpMessageConvertersConfiguration__BeanDefinitions.MappingJackson2HttpMessageConverterConfiguration.getMappingJacksonHttpMessageConverterBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration", JacksonHttpMessageConvertersConfiguration__BeanDefinitions.getJacksonHttpMessageConvertersConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration", HttpMessageConvertersAutoConfiguration__BeanDefinitions.getHttpMessageConvertersAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("messageConverters", HttpMessageConvertersAutoConfiguration__BeanDefinitions.getMessageConvertersBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.client.RestClientAutoConfiguration", RestClientAutoConfiguration__BeanDefinitions.getRestClientAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("httpMessageConvertersRestClientCustomizer", RestClientAutoConfiguration__BeanDefinitions.getHttpMessageConvertersRestClientCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("restClientSsl", RestClientAutoConfiguration__BeanDefinitions.getRestClientSslBeanDefinition());
    beanFactory.registerBeanDefinition("restClientBuilderConfigurer", RestClientAutoConfiguration__BeanDefinitions.getRestClientBuilderConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("restClientBuilder", RestClientAutoConfiguration__BeanDefinitions.getRestClientBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration", RestTemplateAutoConfiguration__BeanDefinitions.getRestTemplateAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("restTemplateBuilderConfigurer", RestTemplateAutoConfiguration__BeanDefinitions.getRestTemplateBuilderConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("restTemplateBuilder", RestTemplateAutoConfiguration__BeanDefinitions.getRestTemplateBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.observation.web.client.HttpClientObservationsAutoConfiguration$MeterFilterConfiguration", HttpClientObservationsAutoConfiguration__BeanDefinitions.MeterFilterConfiguration.getMeterFilterConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("metricsHttpClientUriTagFilter", HttpClientObservationsAutoConfiguration__BeanDefinitions.MeterFilterConfiguration.getMetricsHttpClientUriTagFilterBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.observation.web.client.RestTemplateObservationConfiguration", RestTemplateObservationConfiguration__BeanDefinitions.getRestTemplateObservationConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("observationRestTemplateCustomizer", RestTemplateObservationConfiguration__BeanDefinitions.getObservationRestTemplateCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.observation.web.client.RestClientObservationConfiguration", RestClientObservationConfiguration__BeanDefinitions.getRestClientObservationConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("observationRestClientCustomizer", RestClientObservationConfiguration__BeanDefinitions.getObservationRestClientCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.observation.web.client.HttpClientObservationsAutoConfiguration", HttpClientObservationsAutoConfiguration__BeanDefinitions.getHttpClientObservationsAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.observation.web.servlet.WebMvcObservationAutoConfiguration$MeterFilterConfiguration", WebMvcObservationAutoConfiguration__BeanDefinitions.MeterFilterConfiguration.getMeterFilterConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("metricsHttpServerUriTagFilter", WebMvcObservationAutoConfiguration__BeanDefinitions.MeterFilterConfiguration.getMetricsHttpServerUriTagFilterBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.observation.web.servlet.WebMvcObservationAutoConfiguration", WebMvcObservationAutoConfiguration__BeanDefinitions.getWebMvcObservationAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("webMvcObservationFilter", WebMvcObservationAutoConfiguration__BeanDefinitions.getWebMvcObservationFilterBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.scheduling.ScheduledTasksObservabilityAutoConfiguration", ScheduledTasksObservabilityAutoConfiguration__BeanDefinitions.getScheduledTasksObservabilityAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("observabilitySchedulingConfigurer", ScheduledTasksObservabilityAutoConfiguration__BeanDefinitions.getObservabilitySchedulingConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientRegistrationRepositoryConfiguration", OAuth2ClientRegistrationRepositoryConfiguration__BeanDefinitions.getOAuthClientRegistrationRepositoryConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("clientRegistrationRepository", OAuth2ClientRegistrationRepositoryConfiguration__BeanDefinitions.getClientRegistrationRepositoryBeanDefinition());
    beanFactory.registerBeanDefinition("spring.security.oauth2.client-org.springframework.boot.autoconfigure.security.oauth2.client.OAuth2ClientProperties", OAuth2ClientProperties__BeanDefinitions.getOAuthClientPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2WebSecurityConfiguration", OAuth2WebSecurityConfiguration__BeanDefinitions.getOAuthWebSecurityConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("authorizedClientService", OAuth2WebSecurityConfiguration__BeanDefinitions.getAuthorizedClientServiceBeanDefinition());
    beanFactory.registerBeanDefinition("authorizedClientRepository", OAuth2WebSecurityConfiguration__BeanDefinitions.getAuthorizedClientRepositoryBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration", OAuth2ClientAutoConfiguration__BeanDefinitions.getOAuthClientAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.Oauth2ResourceServerConfiguration$JwtConfiguration", Oauth2ResourceServerConfiguration__BeanDefinitions.JwtConfiguration.getJwtConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerOpaqueTokenConfiguration$OpaqueTokenIntrospectionClientConfiguration", OAuth2ResourceServerOpaqueTokenConfiguration__BeanDefinitions.OpaqueTokenIntrospectionClientConfiguration.getOpaqueTokenIntrospectionClientConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.Oauth2ResourceServerConfiguration$OpaqueTokenConfiguration", Oauth2ResourceServerConfiguration__BeanDefinitions.OpaqueTokenConfiguration.getOpaqueTokenConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration", OAuth2ResourceServerAutoConfiguration__BeanDefinitions.getOAuthResourceServerAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.security.oauth2.resourceserver-org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties", OAuth2ResourceServerProperties__BeanDefinitions.getOAuthResourceServerPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration", AopAutoConfiguration__BeanDefinitions.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration.getCglibAutoProxyConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration", AopAutoConfiguration__BeanDefinitions.AspectJAutoProxyingConfiguration.getAspectJAutoProxyingConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.aop.AopAutoConfiguration", AopAutoConfiguration__BeanDefinitions.getAopAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration", ConfigurationPropertiesAutoConfiguration__BeanDefinitions.getConfigurationPropertiesAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration", LifecycleAutoConfiguration__BeanDefinitions.getLifecycleAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("lifecycleProcessor", LifecycleAutoConfiguration__BeanDefinitions.getLifecycleProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties", LifecycleProperties__BeanDefinitions.getLifecyclePropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration", PersistenceExceptionTranslationAutoConfiguration__BeanDefinitions.getPersistenceExceptionTranslationAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("persistenceExceptionTranslationPostProcessor", PersistenceExceptionTranslationAutoConfiguration__BeanDefinitions.getPersistenceExceptionTranslationPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.data.web.config.ProjectingArgumentResolverRegistrar", ProjectingArgumentResolverRegistrar__BeanDefinitions.getProjectingArgumentResolverRegistrarBeanDefinition());
    beanFactory.registerBeanDefinition("projectingArgumentResolverBeanPostProcessor", ProjectingArgumentResolverRegistrar__BeanDefinitions.getProjectingArgumentResolverBeanPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.data.web.config.SpringDataWebConfiguration", SpringDataWebConfiguration__BeanDefinitions.getSpringDataWebConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("pageableResolver", SpringDataWebConfiguration__BeanDefinitions.getPageableResolverBeanDefinition());
    beanFactory.registerBeanDefinition("sortResolver", SpringDataWebConfiguration__BeanDefinitions.getSortResolverBeanDefinition());
    beanFactory.registerBeanDefinition("offsetResolver", SpringDataWebConfiguration__BeanDefinitions.getOffsetResolverBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.data.web.config.SpringDataJacksonConfiguration", SpringDataJacksonConfiguration__BeanDefinitions.getSpringDataJacksonConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jacksonGeoModule", SpringDataJacksonConfiguration__BeanDefinitions.getJacksonGeoModuleBeanDefinition());
    beanFactory.registerBeanDefinition("pageModule", SpringDataJacksonConfiguration__BeanDefinitions.getPageModuleBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration", SpringDataWebAutoConfiguration__BeanDefinitions.getSpringDataWebAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("pageableCustomizer", SpringDataWebAutoConfiguration__BeanDefinitions.getPageableCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("sortCustomizer", SpringDataWebAutoConfiguration__BeanDefinitions.getSortCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.data.web.config.SpringDataWebSettings", SpringDataWebSettings__BeanDefinitions.getSpringDataWebSettingsBeanDefinition());
    beanFactory.registerBeanDefinition("spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties", SpringDataWebProperties__BeanDefinitions.getSpringDataWebPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration", H2ConsoleAutoConfiguration__BeanDefinitions.getHConsoleAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("h2Console", H2ConsoleAutoConfiguration__BeanDefinitions.getHConsoleBeanDefinition());
    beanFactory.registerBeanDefinition("spring.h2.console-org.springframework.boot.autoconfigure.h2.H2ConsoleProperties", H2ConsoleProperties__BeanDefinitions.getHConsolePropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration", JdbcTemplateConfiguration__BeanDefinitions.getJdbcTemplateConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jdbcTemplate", JdbcTemplateConfiguration__BeanDefinitions.getJdbcTemplateBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration", NamedParameterJdbcTemplateConfiguration__BeanDefinitions.getNamedParameterJdbcTemplateConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("namedParameterJdbcTemplate", NamedParameterJdbcTemplateConfiguration__BeanDefinitions.getNamedParameterJdbcTemplateBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration", JdbcTemplateAutoConfiguration__BeanDefinitions.getJdbcTemplateAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties", JdbcProperties__BeanDefinitions.getJdbcPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor", DatabaseInitializationDependencyConfigurer__BeanDefinitions.DependsOnDatabaseInitializationPostProcessor.getDependsOnDatabaseInitializationPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jdbc.JdbcClientAutoConfiguration", JdbcClientAutoConfiguration__BeanDefinitions.getJdbcClientAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jdbcClient", JdbcClientAutoConfiguration__BeanDefinitions.getJdbcClientBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration", SpringBootWebSecurityConfiguration__BeanDefinitions.getSpringBootWebSecurityConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration", SecurityAutoConfiguration__BeanDefinitions.getSecurityAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("authenticationEventPublisher", SecurityAutoConfiguration__BeanDefinitions.getAuthenticationEventPublisherBeanDefinition());
    beanFactory.registerBeanDefinition("spring.security-org.springframework.boot.autoconfigure.security.SecurityProperties", SecurityProperties__BeanDefinitions.getSecurityPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration", SecurityFilterAutoConfiguration__BeanDefinitions.getSecurityFilterAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("securityFilterChainRegistration", SecurityFilterAutoConfiguration__BeanDefinitions.getSecurityFilterChainRegistrationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration", DataSourceInitializationConfiguration__BeanDefinitions.getDataSourceInitializationConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("dataSourceScriptDatabaseInitializer", DataSourceInitializationConfiguration__BeanDefinitions.getDataSourceScriptDatabaseInitializerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration", SqlInitializationAutoConfiguration__BeanDefinitions.getSqlInitializationAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties", SqlInitializationProperties__BeanDefinitions.getSqlInitializationPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration", DataSourceTransactionManagerAutoConfiguration__BeanDefinitions.JdbcTransactionManagerConfiguration.getJdbcTransactionManagerConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration", DataSourceTransactionManagerAutoConfiguration__BeanDefinitions.getDataSourceTransactionManagerAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration", ProxyTransactionManagementConfiguration__BeanDefinitions.getProxyTransactionManagementConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.transaction.config.internalTransactionAdvisor", ProxyTransactionManagementConfiguration__BeanDefinitions.getInternalTransactionAdvisorBeanDefinition());
    beanFactory.registerBeanDefinition("transactionAttributeSource", ProxyTransactionManagementConfiguration__BeanDefinitions.getTransactionAttributeSourceBeanDefinition());
    beanFactory.registerBeanDefinition("transactionInterceptor", ProxyTransactionManagementConfiguration__BeanDefinitions.getTransactionInterceptorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.transaction.config.internalTransactionalEventListenerFactory", AbstractTransactionManagementConfiguration__BeanDefinitions.getInternalTransactionalEventListenerFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration", TransactionAutoConfiguration__BeanDefinitions.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration.getCglibAutoProxyConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration", TransactionAutoConfiguration__BeanDefinitions.EnableTransactionManagementConfiguration.getEnableTransactionManagementConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration", TransactionAutoConfiguration__BeanDefinitions.TransactionTemplateConfiguration.getTransactionTemplateConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("transactionTemplate", TransactionAutoConfiguration__BeanDefinitions.TransactionTemplateConfiguration.getTransactionTemplateBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration", TransactionAutoConfiguration__BeanDefinitions.getTransactionAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration", EmbeddedWebServerFactoryCustomizerAutoConfiguration__BeanDefinitions.TomcatWebServerFactoryCustomizerConfiguration.getTomcatWebServerFactoryCustomizerConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("tomcatWebServerFactoryCustomizer", EmbeddedWebServerFactoryCustomizerAutoConfiguration__BeanDefinitions.TomcatWebServerFactoryCustomizerConfiguration.getTomcatWebServerFactoryCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration", EmbeddedWebServerFactoryCustomizerAutoConfiguration__BeanDefinitions.getEmbeddedWebServerFactoryCustomizerAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration", HttpEncodingAutoConfiguration__BeanDefinitions.getHttpEncodingAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("characterEncodingFilter", HttpEncodingAutoConfiguration__BeanDefinitions.getCharacterEncodingFilterBeanDefinition());
    beanFactory.registerBeanDefinition("localeCharsetMappingsCustomizer", HttpEncodingAutoConfiguration__BeanDefinitions.getLocaleCharsetMappingsCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration", MultipartAutoConfiguration__BeanDefinitions.getMultipartAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("multipartConfigElement", MultipartAutoConfiguration__BeanDefinitions.getMultipartConfigElementBeanDefinition());
    beanFactory.registerBeanDefinition("multipartResolver", MultipartAutoConfiguration__BeanDefinitions.getMultipartResolverBeanDefinition());
    beanFactory.registerBeanDefinition("spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties", MultipartProperties__BeanDefinitions.getMultipartPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration", ServletEndpointManagementContextConfiguration__BeanDefinitions.WebMvcServletEndpointManagementContextConfiguration.getWebMvcServletEndpointManagementContextConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("servletEndpointRegistrar", ServletEndpointManagementContextConfiguration__BeanDefinitions.WebMvcServletEndpointManagementContextConfiguration.getServletEndpointRegistrarBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration", ServletEndpointManagementContextConfiguration__BeanDefinitions.getServletEndpointManagementContextConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("servletExposeExcludePropertyEndpointFilter", ServletEndpointManagementContextConfiguration__BeanDefinitions.getServletExposeExcludePropertyEndpointFilterBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.endpoint.web.servlet.WebMvcEndpointManagementContextConfiguration", WebMvcEndpointManagementContextConfiguration__BeanDefinitions.getWebMvcEndpointManagementContextConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("webEndpointServletHandlerMapping", WebMvcEndpointManagementContextConfiguration__BeanDefinitions.getWebEndpointServletHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("controllerEndpointHandlerMapping", WebMvcEndpointManagementContextConfiguration__BeanDefinitions.getControllerEndpointHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("endpointObjectMapperWebMvcConfigurer", WebMvcEndpointManagementContextConfiguration__BeanDefinitions.getEndpointObjectMapperWebMvcConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("management.endpoints.web.cors-org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties", CorsEndpointProperties__BeanDefinitions.getCorsEndpointPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.security.servlet.SecurityRequestMatchersManagementContextConfiguration$MvcRequestMatcherConfiguration", SecurityRequestMatchersManagementContextConfiguration__BeanDefinitions.MvcRequestMatcherConfiguration.getMvcRequestMatcherConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("requestMatcherProvider", SecurityRequestMatchersManagementContextConfiguration__BeanDefinitions.MvcRequestMatcherConfiguration.getRequestMatcherProviderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.security.servlet.SecurityRequestMatchersManagementContextConfiguration", SecurityRequestMatchersManagementContextConfiguration__BeanDefinitions.getSecurityRequestMatchersManagementContextConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration$EnableSameManagementContextConfiguration", ManagementContextAutoConfiguration__BeanDefinitions.SameManagementContextConfiguration.EnableSameManagementContextConfiguration.getEnableSameManagementContextConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration", ManagementContextAutoConfiguration__BeanDefinitions.SameManagementContextConfiguration.getSameManagementContextConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration", ManagementContextAutoConfiguration__BeanDefinitions.getManagementContextAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("management.server-org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties", ManagementServerProperties__BeanDefinitions.getManagementServerPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("mvcHandlerMappingIntrospectorRequestTransformer", HandlerMappingIntrospectorRequestTransformer__BeanDefinitions.getMvcHandlerMappingIntrospectorRequestTransformerBeanDefinition());
    beanFactory.registerBeanDefinition("springSecurityFilterChain", WebMvcSecurityConfiguration__BeanDefinitions.CompositeFilterChainProxy.getSpringSecurityFilterChainBeanDefinition());
    beanFactory.registerBeanDefinition("OAuth2AuthorizedClientManager", OAuth2ClientConfiguration__BeanDefinitions.OAuth2AuthorizedClientManagerRegistrar.getOAuthAuthorizedClientManagerBeanDefinition());
    beanFactory.registerBeanDefinition("jpaSharedEM_AWC_entityManagerFactory", SharedEntityManagerCreator__BeanDefinitions.getJpaSharedEMAWCentityManagerFactoryBeanDefinition());
  }

  /**
   * Register the aliases.
   */
  public void registerAliases(DefaultListableBeanFactory beanFactory) {
    beanFactory.registerAlias("applicationTaskExecutor", "taskExecutor");
  }
}
